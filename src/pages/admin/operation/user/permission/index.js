import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "@emotion/react/jsx-runtime";
import Search from "@assets/icons/search_small.svg?react";
import { useState } from "react";
import styles from "./index.styles";
function UserPermissionOpertionPage() {
    const [filterValue, setFilterValue] = useState("all");
    return (_jsxs(_Fragment, { children: [_jsxs("div", { css: styles.filterContainer(), children: [_jsxs("div", { css: styles.filter(), children: [_jsx("label", { htmlFor: "filter", children: "Filter By: " }), _jsxs("select", { id: "filter", value: filterValue, onChange: (event) => setFilterValue(event.target.value), children: [_jsx("option", { value: "all", children: "All" }), _jsx("option", { value: "user", children: "User" }), _jsx("option", { value: "critic", children: "Critic" }), _jsx("option", { value: "admin", children: "Admin" })] })] }), _jsxs("form", { css: styles.search(), onSubmit: (event) => event.preventDefault(), children: [_jsx("input", { type: "text" }), _jsx("button", { type: "submit", children: _jsx(Search, {}) })] })] }), _jsxs("table", { css: styles.tableContainer(), children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { children: "name" }), _jsx("th", { children: "email" }), _jsx("th", { children: "role" })] }) }), _jsx("tbody", { children: _jsxs("tr", { children: [_jsx("td", { css: styles.tableBodyItem(), children: _jsxs("div", { className: "profile", children: [_jsx("div", { className: "profile-image", children: _jsx("img", { src: "", alt: "" }) }), _jsx("span", { children: "Amanda" })] }) }), _jsx("td", { css: styles.tableBodyItem(), children: "amanda@gmail.com" }), _jsx("td", { css: styles.tableBodyItem(), children: _jsxs("select", { className: "roleSelect", children: [_jsx("option", { value: "user", children: "User" }), _jsx("option", { value: "critic", children: "Criric" }), _jsx("option", { value: "admin", children: "Admin" })] }) })] }) })] })] }));
}
export default UserPermissionOpertionPage;
